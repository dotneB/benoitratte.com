---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

// Layout import — provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from "../layouts/BaseLayout.astro";

// Component Imports
import Hero from "../components/Hero.astro";
import Icon from "../components/Icon.astro";
import Pill from "../components/Pill.astro";
import WorkListItem from "../components/WorkListItem.astro";
import EducationListItem from "../components/EducationListItem.astro";

// Page section components
import ContactCTA from "../components/ContactCTA.astro";

// Content Fetching:
const experiences = (await getCollection("work")).sort(
  (a, b) => b.data.startDate.valueOf() - a.data.startDate.valueOf()
);
const education = (await getCollection("education")).sort(
  (a, b) => b.data.startDate.valueOf() - a.data.startDate.valueOf()
);

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/
---

<BaseLayout>
  <div class="stack gap-20 lg:gap-48">
    <div class="wrapper stack gap-8 lg:gap-20">
      <header class="hero">
        <Hero
          title="Hello, my name is Benoit Ratté"
          align="start"
        >
          <div class="roles">
            <Pill><Icon icon="code" size="1.33em" /> Developer</Pill>
            <Pill><Icon icon="strategy" size="1.33em" /> Team Lead</Pill>
            <Pill><Icon icon="heart" size="1.33em" /> Passionate</Pill>
          </div>
        </Hero>

        <Image
          alt="Benoit Ratté smiling"
          width="480"
          height="620"
          src="/assets/portrait.jpg"
          loading="eager"
        />
      </header>
    </div>

    <main class="wrapper stack gap-20 lg:gap-48">
      <section class="section">
        <header class="section-header stack gap-2 lg:gap-4">
          <h3>Experiences</h3>
        </header>

        <div>
          {experiences.map((work) => <WorkListItem work={work} />)}
        </div>
      </section>

      <section class="section">
        <header class="section-header stack gap-2 lg:gap-4">
          <h3>Education</h3>
        </header>

        <div>
          {
            education.map((formation) => (
              <EducationListItem formation={formation} />
            ))
          }
        </div>
      </section>
    </main>

    <ContactCTA />
  </div>
</BaseLayout>

<style>
  .hero {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
  }

  .roles {
    display: none;
  }

  .hero img {
    aspect-ratio: 5 / 4;
    object-fit: cover;
    object-position: top;
    border-radius: 1.5rem;
    box-shadow: var(--shadow-md);
  }

  @media (min-width: 50em) {
    .hero {
      display: grid;
      grid-template-columns: 6fr 4fr;
      padding-inline: 2.5rem;
      gap: 3.75rem;
    }

    .roles {
      margin-top: 0.5rem;
      display: flex;
      gap: 0.5rem;
    }

    .hero img {
      aspect-ratio: 3 / 4;
      border-radius: 4.5rem;
      object-fit: cover;
    }
  }

  /* ====================================================== */
  section {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    color: var(--gray-200);
  }

  .section-title {
    grid-column-start: 1;
    font-size: var(--text-xl);
    color: var(--gray-0);
  }

  .section-header {
    justify-self: center;
    text-align: left;
    max-width: 50ch;
    font-size: var(--text-md);
    color: var(--gray-300);
  }

  .section-header h3 {
    font-size: var(--text-2xl);
  }

  /*@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: 'header header header header' 'gallery gallery gallery gallery';
			gap: 5rem;
		}

		.section.with-cta {
			grid-template-areas: 'header header header cta' 'gallery gallery gallery gallery';
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h3 {
			font-size: var(--text-4xl);
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.gallery {
			grid-area: gallery;
		}

		.cta {
			grid-area: cta;
		}
	}*/
</style>
